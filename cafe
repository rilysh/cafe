#!/usr/bin/env bash
# author: rilysh, license: unlicense

help() {
    cat << EOF
cafe v1.2.1
Usage: cafe command (optional)

Usage:
   -ra     - Random ansi color
   -rb     - Random bold color
   -b      - Blink
   -h      - Help menu (this one)
EOF
}

has() {
    command -v "$1" >/dev/null 2>&1
}

shuff(){
	shuf -i 31-38 -n 1
}

main() {
    ! has xprop && {
        echo "To get WM info, please install xprop" >&2
        exit 1
    }
    # Command variables
    os=$(sed -n "s/PRETTY_NAME=//p" /etc/os-release | tr -d '"')
    kernel_ver=$(uname -r)
    wm=${WAYLAND_DISPLAY:-$(xprop -id "$(xprop -root _NET_SUPPORTING_WM_CHECK 2>/dev/null | cut -d' ' -f5)" _NET_WM_NAME 2>/dev/null | cut -d'"' -f2)}
    uptime=$(uptime -p | sed "s/up[[:space:]]//g")
    user=$(id -u -n)
    host=$(uname -n)
    loadavg=$(awk '{print $1, $2, $3}' /proc/loadavg)
    pkgs=$({
        has dpkg        && dpkg-query -W
        has xbps-query  && xbps-query -l
        has pacman-key  && pacman -Qq
        has rpm         && rpm -qa
        has dnf         && dnf list installed
        has apk         && apk info
        has guix        && guix package --list-installed
        has opkg        && opkg list-installed
        has crux        && pkginfo -i
        has emerge      && printf "%s\n" /var/db/pkg/*/*/
        has brew        && printf "%s\n" "$(brew --cellar)/"*
        has pkgtool     && printf "%s\n" /var/log/packages/*
        has eopkg       && printf "%s\n" /var/lib/eopkg/package/*
        has nix-store   && {
            [ -d "/run/current-system/sw" ] && nix-store -q --requisites /run/current-system/sw
            nix-store -q --requisites ~/.nix-profile
        }
	} | wc -l
    )
    [ -z "$wm" ] && wm="none"

    # Get your hostname and username length (for padding increase one more time) and increase the bar to fit
    bar=$(
        for ((i = 0; i < ${#host}+${#user}+1; i++)); do
            echo -n "-";
        done
)

    # Take arguments and print accordingly
    end="\033[0m"
    case "$1" in
        (-ra)
			head="\033[0;$(shuff)m"
			logo="\033[0;$(shuff)m"
			info="\033[0;$(shuff)m"
        ;;
        (-rb)
			head="\033[1;$(shuff)m"
			logo="\033[1;$(shuff)m"
			info="\033[1;$(shuff)m"
        ;;
        (-b)
            head="\033[1;5m"
            logo="\033[1;5m"
            info="\033[1;5m"
        ;;
        (-h)
            help
            exit
        ;;
    esac

    # Print all gathered information
echo -ne "
                     $head$user@$host$end
                     $head$bar$end
        $logo/\_/\  ($end    $info os: $os$end
       $logo( ^.^ ) _)$end   $info kernel: $kernel_ver$end
       $logo( /|\ ($end      $info wm: $wm$end
       $logo( | | )$end      $info shell: ${SHELL##*/}$end
      $logo(__d b__)$end     $info pkgs: $pkgs$end
                    $info uptime: $uptime$end
                    $info loadavg: $loadavg$end

"
}

main "$1"
